# See https://www.loraserver.io/loraserver/install/config/ for a full configuration example and documentation.

[general]
# debug=5, info=4, warning=3, error=2, fatal=1, panic=0
log_level=4

[postgresql]
dsn="postgres://{{lora_networkserver_postgres_user}}:{{lora_networkserver_postgres_password}}@{{lora_networkserver_postgres_host}}/{{lora_networkserver_postgres_db}}?sslmode=disable"
automigrate=true

[network_server]
net_id="{{lora_networkserver_net_id}}"

[network_server.band]
name="{{lora_networkserver_band}}"

[network_server.network_settings]

[[network_server.network_settings.extra_channels]]
frequency=867100000
min_dr=0
max_dr=5

[[network_server.network_settings.extra_channels]]
frequency=867300000
min_dr=0
max_dr=5

[[network_server.network_settings.extra_channels]]
frequency=867500000
min_dr=0
max_dr=5

[[network_server.network_settings.extra_channels]]
frequency=867700000
min_dr=0
max_dr=5

[[network_server.network_settings.extra_channels]]
frequency=867900000
min_dr=0
max_dr=5

[network_server.gateway.backend]
type="mqtt"

# MQTT gateway backend settings.
#
# This is the backend communicating with the LoRa gateways over a MQTT broker.
[network_server.gateway.backend.mqtt]
# Event topic template.
event_topic="{{ lora_event_template }}"

command_topic_template="{{ lora_command_template }}"

# MQTT server (e.g. scheme://host:port where scheme is tcp, ssl or ws)
server="{{lora_mqttserver}}"

# Connect with the given username (optional)
username="{{lora_networkserver_mqtt_user}}"

# Connect with the given password (optional)
password="{{lora_networkserver_mqtt_password}}"

# Quality of service level
#
# 0: at most once
# 1: at least once
# 2: exactly once
#
# Note: an increase of this value will decrease the performance.
# For more information: https://www.hivemq.com/blog/mqtt-essentials-part-6-mqtt-quality-of-service-levels
qos=0

# Clean session
#
# Set the "clean session" flag in the connect message when this client
# connects to an MQTT broker. By setting this flag you are indicating
# that no messages saved by the broker for this client should be delivered.
clean_session=true

# Client ID
#
# Set the client id to be used by this client when connecting to the MQTT
# broker. A client id must be no longer than 23 characters. When left blank,
# a random id will be generated. This requires clean_session=true.
client_id="lora_srv"

#[geolocation_server]
#server="localhost:8005"

# Metrics collection settings.
[metrics]
# Timezone
#
# The timezone is used for correctly aggregating the metrics (e.g. per hour,
# day or month).
# Example: "Europe/Amsterdam" or "Local" for the the system's local time zone.
timezone="Local"

[metrics.prometheus]
# Enable Prometheus metrics endpoint.
endpoint_enabled={{ lora_networkserver_metrics_enabled | lower }}
api_timing_histogram=false

# The ip:port to bind the Prometheus metrics server to for serving the
# metrics endpoint.
{% if lora_networkserver_metrics_enabled %}
bind="{{ lora_networkserver_metrics_endpoint }}"
{% else %}
bind=""
{% endif %}
